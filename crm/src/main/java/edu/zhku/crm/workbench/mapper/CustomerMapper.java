package edu.zhku.crm.workbench.mapper;

import edu.zhku.crm.workbench.domain.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     * 添加客户信息
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    int insertCustomer(Customer customer);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    int insertSelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     * 根据id查询客户信息，用于信息回显
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    Customer selectCustomerById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     * 根据id修改客户信息
     *
     * @mbggenerated Wed May 04 20:26:04 CST 2022
     */
    int updateCustomerById(Customer customer);

    /**
     * 根据条件查询客户信息，并且进行分页
     * @param map
     * @return
     */
    List<Customer> selectCustomerByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询客户条数
     * @param map
     * @return
     */
    int selectCountOfCustomerByCondition(Map<String,Object> map);

    /**
     * 根据id单条或批量删除客户信息
     * @param ids
     * @return
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 根据id查询客户信息，用于查看客户详细信息
     * @param id
     * @return
     */
    Customer selectCustomerByIdForDetail(String id);

    /**
     * 根据客户名字模糊查询，用于创建交易时自动补全客户名字
     * @param name
     * @return
     */
    List<String> selectAllCustomerNameByName(String name);

    /**
     * 根据客户名称具体查询客户信息
     * @param name
     * @return
     */
    Customer selectCustomerByName(String name);
}
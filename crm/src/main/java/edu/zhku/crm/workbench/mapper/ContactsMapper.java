package edu.zhku.crm.workbench.mapper;

import edu.zhku.crm.workbench.domain.Contacts;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     * 根据id删除联系人
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    int deleteContactsById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     * 保存联系人信息
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    int insertContacts(Contacts contacts);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     * 根据id查询联系人信息
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    Contacts selectContactsById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Wed May 04 20:38:13 CST 2022
     */
    int updateContacts(Contacts contacts);

    /**
     * 根据customerId查询联系人信息
     * @param customerId
     * @return
     */
    List<Contacts> selectContactsByCustomerIdForDetail(String customerId);

    /**
     * 根据联系人名字模糊查询，用于创建交易
     * @param name
     * @return
     */
    List<Contacts> selectContactsByName(String name);

    /**
     * 根据条件查询联系人，并进行分页处理
     * @param map
     * @return
     */
    List<Contacts> selectContactsByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询符合条件联系人的条数
     * @param map
     * @return
     */
    int selectCountOfContactsByConditionForPage(Map<String,Object> map);

    /**
     * 根据id单个或多个删除联系人
     * @param id
     * @return
     */
    int deleteContactsByIds(String[] id);

    /**
     * 根据id查询联系人信息，用于查看详细信息
     * @param id
     * @return
     */
    Contacts selectContactsByIdForDetail(String id);
}
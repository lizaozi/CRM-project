package edu.zhku.crm.workbench.mapper;

import edu.zhku.crm.workbench.domain.Clue;
import edu.zhku.crm.workbench.domain.ClueActivityRelation;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     * 根据id删除单条线索
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    int deleteClueById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     * 插入线索
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    int insertClue(Clue clue);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     * 根据id查询线索信息，用于页面回显
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    Clue selectClueById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Sat Apr 30 13:08:57 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 根据条件查询所有线索信息，用于分页
     * @param map
     * @return
     */
    List<Clue> selectAllClueByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询线索总条数
     * @param map
     * @return
     */
    int selectCountOfClueByCondition(Map<String,Object> map);

    /**
     * 根据id批量或单条删除线索
     * @param ids
     * @return
     */
    int deleteClueByIds(String[] ids);

    /**
     * 根据id修改线索信息
     * @param clue
     * @return
     */
    int updateClueById(Clue clue);

    /**
     *根据id查询线索信息，用于查看线索明细
     * @param id
     * @return
     */
    Clue selectClueByIdForDetail(String id);
}